import{j as i,c as a,b as n,ag as h}from"./chunks/framework.BlzMDYBM.js";const y=JSON.parse('{"title":"Rust 实现 cat 命令","description":"","frontmatter":{},"headers":[],"relativePath":"rust/cat.md","filePath":"rust/cat.md","lastUpdated":1744879674000}'),l={name:"rust/cat.md"};function p(k,s,t,e,r,d){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="rust-实现-cat-命令" tabindex="-1">Rust 实现 cat 命令 <a class="header-anchor" href="#rust-实现-cat-命令" aria-label="Permalink to &quot;Rust 实现 cat 命令&quot;">​</a></h1><p>实现第一个常用的<code>Linux</code>命令, <code>cat</code>命令.</p><h2 id="cat-命令" tabindex="-1">cat 命令 <a class="header-anchor" href="#cat-命令" aria-label="Permalink to &quot;cat 命令&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> date.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Hello</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> world!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Hi</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> china!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="简单的实现" tabindex="-1">简单的实现 <a class="header-anchor" href="#简单的实现" aria-label="Permalink to &quot;简单的实现&quot;">​</a></h2><p>我现在先简单的 <code>v0.0.1</code> 版本的实现.读文件并显示出来. 我们可以成功的显示出来 <code>data.txt</code> 文件内容.</p><h3 id="_1-打开文件" tabindex="-1">1. 打开文件 <a class="header-anchor" href="#_1-打开文件" aria-label="Permalink to &quot;1. 打开文件&quot;">​</a></h3><p><code>Rust</code> 标准库提供了大量的模块和方法用于读写文件。 <code>Rust</code> 标准库中的 <code>std::fs::File</code> 模块提供了静态方法 <code>open()</code> 用于打开一个文件并返回文件句柄。 <code>open()</code> 函数的原型如下:</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">	open</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> Result</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 // 静态方法，以 \`只读\` 模式打开文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>open()</code> 函数用于以只读模式打开一个已经存在的文件，如果文件不存在，则会抛出一个错误。如果文件不可读，那么也会抛出一个错误。</p><p>打开文件例如:</p><p>下面的范例，我们使用 <code>open()</code> 打开当前目录下的 <code>data.txt</code> 文件，已经文件已经存在，所以不会抛出任何错误.</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">File</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;data.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;open File: {:?}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, file);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>编译运行以上 Rust 代码，输出结果如下:</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$ cargo run</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Finished dev [</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">unoptimized</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> debuginfo</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">] target(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">00s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     Running </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\`t</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">arget</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">open File: { fd: </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> path: </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;/Users/richard/project/00.rust/01.rust-commnad-line/rcat/data.txt&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> read: true</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> write: false }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>如果文件 <code>data.txt</code> 不存在，则会抛出以下错误:</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># cargo run</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">   Compiling rcat v0.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">Users</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">richard</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">project</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">00.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">01.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">commnad</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">line</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Finished dev [</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">unoptimized</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> debuginfo</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">] target(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 3.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">42s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     Running </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\`t</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">arget</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">thread </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&#39;main&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> panicked at </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&#39;called \`Result::unwrap()\` on an \`Err\` value: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">main.rs:</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">48</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">note: run with </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">RUST_BACKTRACE</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> environment variable to display a backtrace</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><h3 id="_2-读文件内容" tabindex="-1">2. 读文件内容 <a class="header-anchor" href="#_2-读文件内容" aria-label="Permalink to &quot;2. 读文件内容&quot;">​</a></h3><p>使用 <code>read_to_string()</code> 函数从文件中读取所有内容并转换为字符串。<code>read_to_string()</code> 函数用于从一个文件中读取所有剩余的内容并转换为字符串。</p><p><code>read_to_string()</code> 函数的原型如下:</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">fn read_to_string(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">mut self</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> buf: </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">mut String) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> Result</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>read_to_string()</code> 函数用于读取文件中的所有内容并追加到 <code>buf</code> 中，如果读取成功则返回读取的字节数，如果读取失败则抛出错误。</p><p>使用 <code>read_to_string</code> 函数, 实现我们第一个版本的<code>cat</code>命令。</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">io</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Read</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">File</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;data.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> String</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    file</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">read_to_string</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    print!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;open {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, contents);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_3-增加显示版本号" tabindex="-1">3. 增加显示版本号 <a class="header-anchor" href="#_3-增加显示版本号" aria-label="Permalink to &quot;3. 增加显示版本号&quot;">​</a></h3><p>如果实现个显示版本号, 我们先看一下, <code>cargo</code> 它的实现风格.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> cargo</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -V</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">cargo</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1.59.0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (49d8809dc </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">2022-02-10</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>cargo</code> 显示软件名子, <code>1.59.0</code> 软件版本号. <code>(49d8809dc 2022-02-10)</code>, 这块是由两部分组成, 第一块 <code>49d8809dc</code> 是<code>hash</code>值, 这个值是 <code>Rust</code> y语言提交 <code>git commit</code> 值. 第二块 <code>2022-02-10</code> 是提交的日期.</p><p>那我们参考 <code>cargo</code> 命令, 实现我们显示的版本信息, 这里我们先只是显示版本号.</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>$ rcat -V</span></span>
<span class="line"><span>rcat ver: 0.0.1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="命令行" tabindex="-1">命令行 <a class="header-anchor" href="#命令行" aria-label="Permalink to &quot;命令行&quot;">​</a></h3><p>首先我们要实现, 从命令行中读取参数, 根据参数后, 我们在根据参数进行处理. 我现在只有一个参数 <code>-V</code>.</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">env;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> Vec</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (index, value) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">iter</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">enumerate</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;{} =&gt; {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, index,value );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>我们使用上面的命令:</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$ cargo build     </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">编译</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">   Compiling rcat v0.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">Users</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">richard</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">project</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">00.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">01.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">commnad</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">line</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Finished dev [</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">unoptimized</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> debuginfo</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">] target(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">41s</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$ .</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">V     </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">运行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> .</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">V</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><p>如果现在我们只输入 <code>rcat</code> 时, 出现错误了. 为什么? 怎么去解决这个问题</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">env;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ver </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> Vec</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        match</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">            &quot;-V&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;rcat {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, ver),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;filename: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, cmd);),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>通地上面的例子, 我们已经完成, 当输入 <code>rcat -V</code> 时显示, 我们软件的版本号. 那么接下来, 我们实现当输入文件名时, 显示文件内容. <code>rcat data.txt</code>.</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">env;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">io</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Read</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ver </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> Vec</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        match</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">            &quot;-V&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;rcat {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, ver),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> show_file</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(cmd),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> show_file</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">File</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(filename)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> String</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    file</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">read_to_string</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    print!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;{}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, contents);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>我们对上面代码进行测试. (我们对软件进行升级了, 那我们是不是可以升级一下版本号. <code>ver = &quot;0.0.2&quot;</code>)</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$ cargo run </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">   Compiling rcat v0.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">Users</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">richard</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">project</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">00.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">01.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">commnad</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">line</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Finished dev [</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">unoptimized</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> debuginfo</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">] target(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">50s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     Running </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\`t</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">arget</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">Hello world</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">Hi china</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><p>如果我们想显示某一行输出.而不是全部输出到屏幕上. 那我们想一想怎么去实现?</p><ol><li>我们可以先实现, 全部都输出到屏幕上. 这样相对来说简单一点.(相对.将某一行输出到屏幕上)</li><li>我们需要知道要显示第几行. 那个也需要通过命令行传入进来.</li><li>我们将这行显示到屏幕上.</li><li>(重要)处理各种异常情况, 处理正常情况需要20%的时间, 那么处理异常情况需要80%的时间. 这样程序才会很强壮.</li></ol><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">env;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">io</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Read</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ver </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;0.0.2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> Vec</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        match</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">            &quot;-V&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;rcat {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, ver),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> show_file</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(cmd),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> show_file</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">File</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(filename)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> String</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    file</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">read_to_string</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (line, text) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">enumerate</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;{}: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, line, text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>先完成第一步, 实现打印行输入文件内容.</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$ cargo run </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">   Compiling rcat v0.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">Users</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">richard</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">project</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">00.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">01.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">commnad</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">line</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Finished dev [</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">unoptimized</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> debuginfo</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">] target(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">96s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     Running </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\`t</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">arget</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: Hello world</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: Hi china</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>其实上, 有一点显示小问题. 就是我们正常行号应该是从1开始. 把上面的行号改成从1开始的. 这时候我们可以更新的我们 <code>rcat</code> 版本号了. (ver = 0.0.3)</p></div><p>接下来我们将第2和第3一块实现, 当然也可以分着实现.</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">env;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">io</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Read</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ver </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> Vec</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">  -</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        match</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">            &quot;-V&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;rcat {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, ver),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> args</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">                    let</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> tmp </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">                    num </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> tmp</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">parse</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">i32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt;()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">                }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">                show_file</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(cmd, num);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> show_file</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, exline</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> i32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">File</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(filename)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> String</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    file</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">read_to_string</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (line, text) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">lines</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">enumerate</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> exline </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (line </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> i32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> exline </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">            println!</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;{}: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, line, text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$ rcat git:(master) ✗ cargo run </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Finished dev [</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">unoptimized</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> debuginfo</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">] target(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">01s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     Running </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\`t</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">arget</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: Hi china</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$ cargo run </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">--</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">   Compiling rcat v0.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">Users</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">richard</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">project</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">00.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">01.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">commnad</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">line</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Finished dev [</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">unoptimized</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> debuginfo</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">] target(s) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1.</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">74s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     Running </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\`t</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">arget</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">rcat </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">\`</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: Hello world</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: Hi china</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><p>第四部分, 需要自己去实现一下. 把所有的场景都要想到. 都要进行处理.</p><h4 id="clap-第三方库" tabindex="-1">Clap 第三方库 <a class="header-anchor" href="#clap-第三方库" aria-label="Permalink to &quot;Clap 第三方库&quot;">​</a></h4><p>我们需要用到第三方库 <code>clap</code> 来实现读取命令行的参数.</p>`,48)]))}const c=i(l,[["render",p]]);export{y as __pageData,c as default};
