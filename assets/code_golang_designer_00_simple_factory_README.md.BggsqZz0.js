import{j as o,c as a,b as t,ag as c}from"./chunks/framework.BlzMDYBM.js";const m=JSON.parse('{"title":"简单工厂模式","description":"","frontmatter":{},"headers":[],"relativePath":"code/golang/designer/00_simple_factory/README.md","filePath":"code/golang/designer/00_simple_factory/README.md","lastUpdated":1744879674000}'),d={name:"code/golang/designer/00_simple_factory/README.md"};function r(s,e,n,_,i,l){return t(),a("div",null,e[0]||(e[0]=[c('<h1 id="简单工厂模式" tabindex="-1">简单工厂模式 <a class="header-anchor" href="#简单工厂模式" aria-label="Permalink to &quot;简单工厂模式&quot;">​</a></h1><p><code>go</code> 语言没有构造函数一说，所以一般会定义 <code>NewXXX</code> 函数来初始化相关类。 <code>NewXXX</code> 函数返回接口时就是简单工厂模式，也就是说 <code>Golang</code> 的一般推荐做法就是简单工厂。</p><p>在这个 <code>simplefactory</code> 包中只有API 接口和 <code>NewAPI</code> 函数为包外可见，封装了实现细节。</p>',3)]))}const f=o(d,[["render",r]]);export{m as __pageData,f as default};
