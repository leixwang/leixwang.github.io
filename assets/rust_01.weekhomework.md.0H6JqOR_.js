import{j as i,c as a,b as n,ag as l}from"./chunks/framework.BlzMDYBM.js";const c=JSON.parse('{"title":"OS开发中阶训练营第一周课后作业","description":"","frontmatter":{},"headers":[],"relativePath":"rust/01.weekhomework.md","filePath":"rust/01.weekhomework.md","lastUpdated":1744879674000}'),p={name:"rust/01.weekhomework.md"};function e(t,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="os开发中阶训练营第一周课后作业" tabindex="-1">OS开发中阶训练营第一周课后作业 <a class="header-anchor" href="#os开发中阶训练营第一周课后作业" aria-label="Permalink to &quot;OS开发中阶训练营第一周课后作业&quot;">​</a></h1><h2 id="预备" tabindex="-1">预备 <a class="header-anchor" href="#预备" aria-label="Permalink to &quot;预备&quot;">​</a></h2><ol><li><p>Fork ArceOS的工程，clone到本地。工程链接如下</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">git@github.com:rcore-os/arceos.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>在main分支下，创建并切换到新的分支week1，执行</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> week1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>后面的实验都在该分支下进行。</p></li></ol><h2 id="第一节课课后作业" tabindex="-1">第一节课课后作业 <a class="header-anchor" href="#第一节课课后作业" aria-label="Permalink to &quot;第一节课课后作业&quot;">​</a></h2><p>支持HashMap数据类型。以apps/memtest为测试应用。</p><p>本次作业的主要目的为带领大家了解 arceos 的接口层次，主要修改内容在 ulib/axstd 文件夹中。</p><p>首先修改 apps/memtest/src/main.rs，把 BTreeMap 替换为 HashMap ，如下：</p><div class="language-diff vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> use rand::{rngs::SmallRng, RngCore, SeedableRng};</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#B31D28;">-use std::collections::BTreeMap;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#22863A;">+use std::collections::HashMap;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> use std::vec::Vec;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> fn test_vec(rng: &amp;mut impl RngCore) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-light-font-weight:bold;--shiki-dark:#6F42C1;--shiki-dark-font-weight:bold;">@@ -22,9 +22,9 @@</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> fn test_vec(rng: &amp;mut impl RngCore) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     println!(&quot;test_vec() OK!&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#B31D28;">-fn test_btree_map(rng: &amp;mut impl RngCore) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#22863A;">+fn test_hashmap_map(rng: &amp;mut impl RngCore) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     const N: usize = 50_000;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#B31D28;">-    let mut m = BTreeMap::new();</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#22863A;">+    let mut m = HashMap::new();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     for _ in 0..N {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">         let value = rng.next_u32();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">         let key = format!(&quot;key_{value}&quot;);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-light-font-weight:bold;--shiki-dark:#6F42C1;--shiki-dark-font-weight:bold;">@@ -35,7 +35,7 @@</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> fn test_btree_map(rng: &amp;mut impl RngCore) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">             assert_eq!(k.parse::&lt;u32&gt;().unwrap(), *v);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">         }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     }</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#B31D28;">-    println!(&quot;test_btree_map() OK!&quot;);</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#22863A;">+    println!(&quot;test_hashmap_map() OK!&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> #[cfg_attr(feature = &quot;axstd&quot;, no_mangle)]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-light-font-weight:bold;--shiki-dark:#6F42C1;--shiki-dark-font-weight:bold;">@@ -44,7 +44,7 @@</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> fn main() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     let mut rng = SmallRng::seed_from_u64(0xdead_beef);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     test_vec(&amp;mut rng);</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#B31D28;">-    test_btree_map(&amp;mut rng);</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#22863A;">+    test_hashmap_map(&amp;mut rng);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     println!(&quot;Memory tests run OK!&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>然后，尝试编译运行，<code>make A=apps/memtest ARCH=riscv64 run</code>，此时会报错，因为我们目前不支持HashMap类型。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">➜</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">  arceos</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> git:</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">os_camp</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> A=apps/memtest</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> ARCH=riscv64</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    Building</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> App:</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> memtest,</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> Arch:</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64,</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> Platform:</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64-qemu-virt,</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> App</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> type:</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> rust</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> --target</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64gc-unknown-none-elf</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> --target-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> /home/hky/workspace/rcore-os/arceos/target</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> --release</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">  --manifest-path</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> apps/memtest/Cargo.toml</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> --features</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;axstd/log-level-warn&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">   Compiling</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> arceos-memtest</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> v0.1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (/home/hky/workspace/rcore-os/arceos/apps/memtest)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">error[E0432]:</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> unresolved</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">std::collections::HashMap</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">\`</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">apps/memtest/src/main.rs:9:5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">  |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">9</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> std::collections::HashMap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">     ^^^^^^^^^^^^^^^^^^^^^^^^^</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">HashMap</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> in </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">collections</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">For</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> more</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> information</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> about</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> error,</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> try</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">rustc</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> --explain</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> E0432\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">error:</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> could</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> compile</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">arceos-memtest</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">bin</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;arceos-memtest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">due</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> to</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> previous</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> error</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">make:</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> ***</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> [scripts/make/build.mk:36: </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">_cargo_build]</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> Error</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 101</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>要求</strong>：在ulib/axstd中支持HashMap类型</p><p><strong>预期输出</strong>：执行<code>make A=apps/memtest ARCH=riscv64 run</code></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">arch</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">platform</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64-qemu-virt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">target</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64gc-unknown-none-elf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">smp</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">build_mode</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> release</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">log_level</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> warn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Running</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> memory</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> tests...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">test_vec</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() OK</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">test_hashmap_map</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() OK</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Memory</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> tests</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> OK!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>提示</strong> ：</p><ol><li>参考官方rust标准库中的HashMap实现，把涉及的代码拷过来，做一下修改。只需要满足memtest的测试需要即可。</li></ol><p>（在 axstd 中使用 rust 标准库中的代码可能需要给 axstd 增加一些 feature，可能需要增加这些：）</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ulib/axstd/src/lib.rs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![cfg_attr(all(not(test), not(doc)), no_std)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(doc_cfg)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(doc_auto_cfg)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(hashmap_internals)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(extend_one)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(hasher_prefixfree_extras)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(error_in_core)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(try_reserve_kind)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(thread_local)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#![feature(const_hash)]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2"><li><p>注意：官方std与ArceOS的axstd的区别。官方rust标准库主要是基于Linux/Windows这些内核，为应用提供的用户库。官方std的支持后端是libc+syscall；而ArceOS是单特权级，没有syscall一说，axstd直接通过一系列function-call调用底层的功能。</p></li><li><p>HashMap之所以没有像其他collections类型一样放到alloc库中实现，主要是因为它需要随机数的支持，而随机数的产生机制是平台相关的。类似的代码可以在 std/src/hash/randoms.rs 中对 <code>RandomState</code> 的初始化代码中找到。 大家做实验可以简单点，用一个软实现的随机数函数来产生。比如</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> spinlock</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">SpinNoIrq</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">use</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> crate::</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">time;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">static</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> PARK_MILLER_LEHMER_SEED</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> SpinNoIrq</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">u32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> SpinNoIrq</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> RAND_MAX</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> u64</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 2_147_483_647</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> random</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> u128</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> seed </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> PARK_MILLER_LEHMER_SEED</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">lock</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">seed </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        *</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">seed </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> time</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">current_ticks</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> u32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    let</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> mut</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ret</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> u128</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        *</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">seed </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ((</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">u64</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">seed) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 48271</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> RAND_MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> u32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">seed </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> u128</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    ret</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li></ol><h2 id="第二节课课后作业" tabindex="-1">第二节课课后作业 <a class="header-anchor" href="#第二节课课后作业" aria-label="Permalink to &quot;第二节课课后作业&quot;">​</a></h2><p>在第一节课的基础上，针对字节内存分配，新增一个简单的内存分配算法。</p><p>本次作业的主要目的为带领大家了解arceos的内存分配接口，主要修改内容在 crates/allocator 文件夹中。</p><p><strong>准备</strong>：阅读 crates/allocator/src/lib.rs，了解 arceos 目前支持的内存分配算法，思考它们的区别与适用场景。</p><p><strong>要求</strong>：在 crates/allocator 中支持一个新的内存分配算法，传递 feature 为 &quot;new&quot;。</p><div class="language-Rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// crates/allocator/src/lib.rs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;bitmap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> bitmap</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;bitmap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> bitmap</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">BitmapPageAllocator</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;buddy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> buddy</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;buddy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> buddy</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">BuddyByteAllocator</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;slab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> slab</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;slab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> slab</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">SlabByteAllocator</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">mod</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">#[cfg(feature </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">YourNewAllocator</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>注意修改 allocator 的 Cargo.toml</p><div class="language-toml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">features</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">default = []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">full = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;bitmap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;tlsf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;slab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;buddy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;allocator_api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">bitmap = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;dep:bitmap-allocator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">tlsf = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;dep:rlsf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">slab = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;dep:slab_allocator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">buddy = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;dep:buddy_system_allocator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">new = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;dep:your_dep_if_needed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>提示</strong>：</p><p>可以使用 <a href="https://github.com/rust-osdev/linked-list-allocator" target="_blank" rel="noreferrer">https://github.com/rust-osdev/linked-list-allocator</a></p><p>也可以去 <a href="https://crates.io/" target="_blank" rel="noreferrer">crates.io</a> 里面寻找更多的合适的 allocator</p><p>大部分现成的 allocator 都没有现成的 <code>add_memory</code> 功能实现，针对 <code>BaseAllocator</code> 中的该接口可以之间返回 <code>Ok</code></p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">impl</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> BaseAllocator</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> for</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> YourNewByteAllocator</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;mut</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, start</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> usize</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, size</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> usize</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /// Your implementation.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> add_memory</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;mut</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, _start</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> usize</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, _size</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> usize</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> AllocResult</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // unsafe { self.inner.add_to_heap(start, start + size) };</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>注意</strong>:</p><p>参考 ulib/axstd/Cargo.toml 中关于内存管理算法的 features 增加一个新的 feature 选项。</p><div class="language-toml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ulib/axstd/Cargo.toml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Memory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;arceos_api/alloc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axfeat/alloc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axio/alloc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-tlsf = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axfeat/alloc-tlsf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-slab = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axfeat/alloc-slab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-buddy = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axfeat/alloc-buddy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-new = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axfeat/alloc-new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>参考 api/axfeat/Cargo.toml 中关于内存管理算法的 features 增加一个新的 feature 选项。</p><div class="language-toml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># api/axfeat/Cargo.toml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Memory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axalloc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axruntime/alloc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-tlsf = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axalloc/tlsf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-slab = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axalloc/slab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-buddy = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axalloc/buddy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">alloc-new = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;axalloc/new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>最后修改 modules/axalloc/Cargo.toml 中关于内存管理算法的 features 增加一个新的 feature 选项。</p><div class="language-toml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># modules/axalloc/Cargo.toml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">features</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">default = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;tlsf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">tlsf = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;allocator/tlsf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">slab = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;allocator/slab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">buddy = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;allocator/buddy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">new = [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;allocator/new&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>预期输出</strong>：执行<code>make A=apps/memtest ARCH=riscv64 run FEATURES=alloc-new</code>，结果应该与第一次作业一致。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">arch</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">platform</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64-qemu-virt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">target</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> riscv64gc-unknown-none-elf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">smp</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">build_mode</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> release</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">log_level</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> warn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Running</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> memory</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> tests...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">test_vec</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() OK</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">test_hashmap_map</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() OK</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Memory</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> tests</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> OK!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="作业提交" tabindex="-1">作业提交 <a class="header-anchor" href="#作业提交" aria-label="Permalink to &quot;作业提交&quot;">​</a></h2><p>1、题目做完以后, 使用 git diff 将本次作业修改的内容提取成补丁文件,命名为 用户名-题号.patch</p><p>例如:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> diff</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> main</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> pengzechen-lesson1.patch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2、提交之前<strong>删除根目录的target目录</strong>, 将剩余文件(包括上一步生成的patch文件)打包成<strong>zip压缩包</strong>，使用固定邮箱发送到指定邮箱: <a href="mailto:173701980@qq.com" target="_blank" rel="noreferrer">173701980@qq.com</a>，<strong>邮箱标题</strong>命名为 <strong>学员名称-小组名称-lesson{题号}</strong>，没有加入小组可命名为 <strong>单人</strong>。</p><p>（例如：第一题课后作业邮箱标题为 &quot;唐翰文-测试小组-lesson1&quot; 或 &quot;唐翰文-单人-lesson1&quot;）</p><p><strong>注意</strong>：</p><p>第一周的作业主要是为了让大家熟悉 arceos 的代码结构，作业本身难度并不高，只是需要有限的工作量。</p><p>作业的预期输出比较简单，老师与助教会手动查看代码实现，<strong>希望大家不要通过修改输出结果来欺骗自动评测脚本</strong>。</p>`,49)]))}const o=i(p,[["render",e]]);export{c as __pageData,o as default};
