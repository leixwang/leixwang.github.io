import{j as i,c as a,b as n,ag as p}from"./chunks/framework.BlzMDYBM.js";const y=JSON.parse('{"title":"totp","description":"","frontmatter":{},"headers":[],"relativePath":"golang/totp.md","filePath":"golang/totp.md","lastUpdated":1744879674000}'),l={name:"golang/totp.md"};function h(t,s,k,e,r,d){return n(),a("div",null,s[0]||(s[0]=[p(`<h1 id="totp" tabindex="-1">totp <a class="header-anchor" href="#totp" aria-label="Permalink to &quot;totp&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#什么是-totp">什么是 totp</a></li><li><a href="#如何使用-totp">如何使用 TOTP</a></li></ul></nav><h2 id="什么是-totp" tabindex="-1">什么是 totp <a class="header-anchor" href="#什么是-totp" aria-label="Permalink to &quot;什么是 totp&quot;">​</a></h2><p>TOTP（Time-based One-Time Password Algorithm）是基于时间的一次性密码算法，它通过计算一个共享密钥和当前时间戳，生成一个6位数的验证码。</p><p>TOTP 算法的特点是：</p><ul><li>共享密钥：TOTP 算法的共享密钥是用户自己生成的，用户可以选择自己喜欢的任意密码，并把它保存在一个安全的地方。</li><li>时间戳：TOTP 算法使用当前时间戳作为输入，生成验证码。</li><li>验证码：TOTP 算法生成的验证码是一个6位数，它是根据共享密钥和当前时间戳计算出来的。</li></ul><h2 id="如何使用-totp" tabindex="-1">如何使用 TOTP <a class="header-anchor" href="#如何使用-totp" aria-label="Permalink to &quot;如何使用 TOTP&quot;">​</a></h2><p>下面的代码已经验证过了 6位code码, 30秒种过期, 可以生成二维码, 扫描后用 app 上的软件使用, 获取的 totp code 与实现算出的 totp code 的一致.</p><details class="details custom-block"><summary>代码</summary><div class="language-go vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">crypto/hmac</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">crypto/sha1</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">encoding/base32</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">encoding/binary</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">errors</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">net/url</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">testing</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">time</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// GoogleAuthenticator2FaSha1 只实现google authenticator sha1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> GoogleAuthenticator2FaSha1</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	Base32NoPaddingEncodedSecret </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //The base32NoPaddingEncodedSecret parameter is an arbitrary key value encoded in Base32 according to RFC 3548. The padding specified in RFC 3548 section 2.2 is not required and should be omitted.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	ExpireSecond                 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">uint64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //更新周期单位秒</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	Digits                       </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //数字数量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// otpauth://totp/ACME%20Co:john@example.com?secret=HXDMVJECJJWSRB3HWIZR4IFUGFTMXBOZ&amp;issuer=ACME%20Co&amp;algorithm=SHA1&amp;digits=6&amp;period=30</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> testSecret</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;HXDMVJECJJWSRB3HWIZR4IFUGFTMXBOZ&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //base32-no-padding-encoded-string</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Totp 计算Time-based One-time Password 数字</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">m </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">GoogleAuthenticator2FaSha1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Totp</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() (</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">code</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	count </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> uint64</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Now</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Unix</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> m.ExpireSecond</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	key, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> base32.StdEncoding.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">WithPadding</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(base32.NoPadding).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">DecodeString</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(m.Base32NoPaddingEncodedSecret)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">		return</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, errors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">New</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;https://github.com/google/google-authenticator/wiki/Key-Uri-Format,REQUIRED: The base32NoPaddingEncodedSecret parameter is an arbitrary key value encoded in Base32 according to RFC 3548. The padding specified in RFC 3548 section 2.2 is not required and should be omitted&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	codeInt </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> hotp</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(key, count, m.Digits)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	intFormat </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%%</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">d&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, m.Digits) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//数字长度补零</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(intFormat, codeInt), </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">nil</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// QrString google authenticator 扫描二维码的二维码字符串</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">m </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">GoogleAuthenticator2FaSha1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">QrString</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">issuer</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) (</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">qr</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	issuer </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">QueryEscape</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(issuer)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">\`otpauth://totp/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">?secret=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&amp;issuer=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&amp;algorithm=SHA1&amp;digits=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&amp;period=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, label, m.Base32NoPaddingEncodedSecret, issuer, m.Digits, m.ExpireSecond)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> hotp</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> []</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">counter</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> uint64</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">digits</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//RFC 6238</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//只支持sha1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	h </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> hmac.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">New</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(sha1.New, key)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	binary.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(h, binary.BigEndian, counter)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> h.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Sum</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//取sha1的最后4byte</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//0x7FFFFFFF 是long int的最大值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//math.MaxUint32 == 2^32-1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//&amp; 0x7FFFFFFF == 2^31  Set the first bit of truncatedHash to zero</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //remove the most significant bit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// len(sum)-1]&amp;0x0F 最后 像登陆 (bytes.len-4)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//取sha1 bytes的最后4byte 转换成 uint32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	v </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> binary.BigEndian.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Uint32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(sum[sum[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(sum)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0F</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> 0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">7FFFFFFF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	d </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> uint32</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//取十进制的余数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> digits </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		d </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(v </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> d)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> TestTotp</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">testing</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	g </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> GoogleAuthenticator2FaSha1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		Base32NoPaddingEncodedSecret: testSecret,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		ExpireSecond:                 </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		Digits:                       </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	totp, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Totp</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		t.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(err)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">		return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	t.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Log</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(totp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> TestQr</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">testing</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	g </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> GoogleAuthenticator2FaSha1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		Base32NoPaddingEncodedSecret: testSecret,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		ExpireSecond:                 </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		Digits:                       </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	qrString </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">QrString</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;TechBlog:mojotv.cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;Eric Zhou&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	t.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Log</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(qrString)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//HXDMVCCCJJWSRB3HWIZR4IFUGFTMXBOZ 密码串，暂时没弄明白加密原理</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//expiresecond  刷新时间</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//digits 数字位数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//label 使用者</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//issuer 颁发者</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//返回一个二维码地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	a </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> GoogleAuthenticator2FaSha1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;HXDMVCCCJJWSRB3HWIZR4IFUGFTMXBOZ&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	b </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">QrString</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;fushisanlang&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;dao.server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(b)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	escapeUrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">QueryEscape</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(b)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;https://api.pwmqr.com/qrcode/create/?url=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> escapeUrl)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	totp, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Totp</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;Error:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, err)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">		return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;TOTP Code:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, totp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br></div></div></details>`,9)]))}const E=i(l,[["render",h]]);export{y as __pageData,E as default};
