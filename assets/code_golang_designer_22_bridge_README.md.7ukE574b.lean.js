import{j as t,c as r,b as n,q as e,f as d}from"./chunks/framework.BlzMDYBM.js";const f=JSON.parse('{"title":"桥接模式","description":"","frontmatter":{},"headers":[],"relativePath":"code/golang/designer/22_bridge/README.md","filePath":"code/golang/designer/22_bridge/README.md","lastUpdated":1744879674000}'),o={name:"code/golang/designer/22_bridge/README.md"};function s(l,a,i,c,p,g){return n(),r("div",null,a[0]||(a[0]=[e("h1",{id:"桥接模式",tabindex:"-1"},[d("桥接模式 "),e("a",{class:"header-anchor",href:"#桥接模式","aria-label":'Permalink to "桥接模式"'},"​")],-1),e("p",null,"桥接模式分离抽象部分和实现部分。使得两部分独立扩展。",-1),e("p",null,"桥接模式类似于策略模式，区别在于策略模式封装一系列算法使得算法可以互相替换。",-1),e("p",null,"策略模式使抽象部分和实现部分分离，可以独立变化。",-1)]))}const m=t(o,[["render",s]]);export{f as __pageData,m as default};
