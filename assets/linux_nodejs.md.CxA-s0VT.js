import{j as n,c as a,b as i,ag as e}from"./chunks/framework.BlzMDYBM.js";const k=JSON.parse('{"title":"nodejs安装","description":"","frontmatter":{},"headers":[],"relativePath":"linux/nodejs.md","filePath":"linux/nodejs.md","lastUpdated":1744879674000}'),l={name:"linux/nodejs.md"};function p(t,s,r,h,d,o){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="nodejs安装" tabindex="-1">nodejs安装 <a class="header-anchor" href="#nodejs安装" aria-label="Permalink to &quot;nodejs安装&quot;">​</a></h1><h2 id="ubuntu-install" tabindex="-1">ubuntu install <a class="header-anchor" href="#ubuntu-install" aria-label="Permalink to &quot;ubuntu install&quot;">​</a></h2><p>安装nodejs的方法.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -sL</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> https://deb.nodesource.com/setup_6.x</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -E</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> bash</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> nodejs</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>开发环境的安装:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> build-essential</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="node-js升级" tabindex="-1">node.js升级 <a class="header-anchor" href="#node-js升级" aria-label="Permalink to &quot;node.js升级&quot;">​</a></h3><p>node有一个模块叫 n，是专门用来管理 node.js 的版本安装并将当前的nodejs版本升级为stable最新版本</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">        //安装nodejs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> stable</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">           //升级nodejs到stable版本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>显示当前nodejs版本信息.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -v</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="nvm使用" tabindex="-1">nvm使用 <a class="header-anchor" href="#nvm使用" aria-label="Permalink to &quot;nvm使用&quot;">​</a></h3><p>总的来说，nvm有点类似于 Python 的 virtualenv 或者 Ruby 的 rvm，每个node版本的模块都会被安装在各自版本的沙箱里面（因此切换版本后模块需重新安装），因此考虑到需要时常对node版本进行切换测试兼容性和一些模块对node版本的限制，我选择了使用nvm作为管理工具，下面就来说说nvm的安装和使用过程。</p><h4 id="安装nvm" tabindex="-1">安装nvm <a class="header-anchor" href="#安装nvm" aria-label="Permalink to &quot;安装nvm&quot;">​</a></h4><p>通下面的网址可以找到 nvm 最新的版本. <a href="https://github.com/creationix/nvm" target="_blank" rel="noreferrer">nvm最新的版本</a></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>完成后nvm就被安装在了 ~/.nvm 下啦，接下来就需要配一下环境变量了，如果你也使用了 zsh 的话，就需要在 ~/.zshrc 这个配置文件中配置，否则就找找看 ~/.bash_profile 或者 ~/.profile 吧。</p><p>打开 ~/.zshrc ，在最后一行加上：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">/.nvm&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # This loads nvm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这一步的作用是每次新打开一个bash，nvm都会被自动添加到环境变量中了。</p><p>完成后输入 source ~/.zshrc 重新启动一下配置。</p><p>输入 nvm 可以看到如下信息：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>➜  ~  nvm</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Node Version Manager</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Note: &lt;version&gt; refers to any version-like string nvm understands. This includes:</span></span>
<span class="line"><span>  - full or partial version numbers, starting with an optional &quot;v&quot; (0.10, v0.1.2, v1)</span></span>
<span class="line"><span>  - default (built-in) aliases: node, stable, unstable, iojs, system</span></span>
<span class="line"><span>  - custom aliases you define with \`nvm alias foo\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Usage:</span></span>
<span class="line"><span>  nvm help                                  Show this message</span></span>
<span class="line"><span>  nvm --version                             Print out the latest released version of nvm</span></span>
<span class="line"><span>  nvm install [-s] &lt;version&gt;                Download and install a &lt;version&gt;, [-s] from source. Uses .nvmrc if available</span></span>
<span class="line"><span>    --reinstall-packages-from=&lt;version&gt;     When installing, reinstall packages installed in &lt;node|iojs|node version number&gt;</span></span>
<span class="line"><span>  nvm uninstall &lt;version&gt;                   Uninstall a version</span></span>
<span class="line"><span>  nvm use [--silent] &lt;version&gt;              Modify PATH to use &lt;version&gt;. Uses .nvmrc if available</span></span>
<span class="line"><span>  nvm exec [--silent] &lt;version&gt; [&lt;command&gt;] Run &lt;command&gt; on &lt;version&gt;. Uses .nvmrc if available</span></span>
<span class="line"><span>  nvm run [--silent] &lt;version&gt; [&lt;args&gt;]     Run \`node\` on &lt;version&gt; with &lt;args&gt; as arguments. Uses .nvmrc if available</span></span>
<span class="line"><span>  nvm current                               Display currently activated version</span></span>
<span class="line"><span>  nvm ls                                    List installed versions</span></span>
<span class="line"><span>  nvm ls &lt;version&gt;                          List versions matching a given description</span></span>
<span class="line"><span>  nvm ls-remote                             List remote versions available for install</span></span>
<span class="line"><span>  nvm version &lt;version&gt;                     Resolve the given description to a single local version</span></span>
<span class="line"><span>  nvm version-remote &lt;version&gt;              Resolve the given description to a single remote version</span></span>
<span class="line"><span>  nvm deactivate                            Undo effects of \`nvm\` on current shell</span></span>
<span class="line"><span>  nvm alias [&lt;pattern&gt;]                     Show all aliases beginning with &lt;pattern&gt;</span></span>
<span class="line"><span>  nvm alias &lt;name&gt; &lt;version&gt;                Set an alias named &lt;name&gt; pointing to &lt;version&gt;</span></span>
<span class="line"><span>  nvm unalias &lt;name&gt;                        Deletes the alias named &lt;name&gt;</span></span>
<span class="line"><span>  nvm reinstall-packages &lt;version&gt;          Reinstall global \`npm\` packages contained in &lt;version&gt; to current version</span></span>
<span class="line"><span>  nvm unload                                Unload \`nvm\` from shell</span></span>
<span class="line"><span>  nvm which [&lt;version&gt;]                     Display path to installed node version. Uses .nvmrc if available</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Example:</span></span>
<span class="line"><span>  nvm install v0.10.32                  Install a specific version number</span></span>
<span class="line"><span>  nvm use 0.10                          Use the latest available 0.10.x release</span></span>
<span class="line"><span>  nvm run 0.10.32 app.js                Run app.js using node v0.10.32</span></span>
<span class="line"><span>  nvm exec 0.10.32 node app.js          Run \`node app.js\` with the PATH pointing to node v0.10.32</span></span>
<span class="line"><span>  nvm alias default 0.10.32             Set default node version on a shell</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Note:</span></span>
<span class="line"><span>  to remove, delete, or uninstall nvm - just remove the \`$NVM_DIR\` folder (usually \`~/.nvm\`)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="meteor-1-30部署" tabindex="-1">meteor 1.30部署 <a class="header-anchor" href="#meteor-1-30部署" aria-label="Permalink to &quot;meteor 1.30部署&quot;">​</a></h3><p>需要用到nodejs 5.3.0版本, 我们先需要安装这个版本的nodejs.</p><p>安装node.js 5.3.0版本:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> v5.3.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>切换当前的nodejs版本.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5.3.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,29)]))}const b=n(l,[["render",p]]);export{k as __pageData,b as default};
